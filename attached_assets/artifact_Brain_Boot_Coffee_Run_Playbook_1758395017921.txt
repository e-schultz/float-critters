import React, { useState } from 'react';
import { ChevronDown, ChevronRight, Circle, Square, Triangle, Zap, Battery } from 'lucide-react';

const playbookData = {
  "meta": {
    "title": "Brain Boot Coffee Run",
    "subtitle": "Tactical Playbook for Low-Energy External Motivator Deployment",
    "version": "2025-09-18",
    "context": "Hit-by-truck mornings requiring structured external engagement"
  },
  "sections": [
    {
      "id": "pre_departure",
      "title": "Pre-Departure Assessment",
      "icon": "battery",
      "color": "cyan",
      "entries": [
        {
          "pattern": "Edge-of-Bed Paralysis",
          "description": "Unable to initiate movement despite being awake for 10+ minutes",
          "signals": ["Sitting motionless on bed edge", "Internal systems feel offline", "Simple tasks seem overwhelming", "No natural momentum toward activity"],
          "protocol": "EXECUTE: Set micro-goal of standing up. No planning beyond that step. Use 3-2-1 countdown if needed. Movement before motivation."
        },
        {
          "pattern": "Decision Fatigue Prevention",
          "description": "Cognitive bandwidth too low for complex choices",
          "signals": ["Can't decide what to wear", "Multiple options feel overwhelming", "Simple decisions taking excessive time"],
          "protocol": "EXECUTE: Default choices only. Same coffee order, same route, minimal clothing decisions. Preserve cognitive resources for core mission."
        },
        {
          "pattern": "Automation Systems Check",
          "description": "Verify productivity tools won't misfire during low-bandwidth operation",
          "signals": ["Recent text expander glitches", "Phone apps behaving unpredictably", "Muscle memory triggering wrong shortcuts"],
          "protocol": "EXECUTE: Switch phone to basic mode. Disable complex text expansions. Manual typing only during mission."
        }
      ]
    },
    {
      "id": "mission_execution",
      "title": "Mission Execution Protocol",
      "icon": "zap",
      "color": "green",
      "entries": [
        {
          "pattern": "External Motivator Deployment",
          "description": "Using structured external goal to bridge internal→external engagement",
          "signals": ["Tim Hortons as concrete destination", "Coffee as reward mechanism", "Fresh air as system catalyst"],
          "protocol": "EXECUTE: Focus only on reaching destination. Ignore internal resistance. External structure provides momentum when internal motivation unavailable."
        },
        {
          "pattern": "Sensory System Activation",
          "description": "Fresh air and movement beginning to activate dormant systems",
          "signals": ["Slight relief from outdoor environment", "Walking rhythm providing gentle stimulation", "Caffeine anticipation creating forward momentum"],
          "protocol": "EXECUTE: Notice improvements without forcing them. Let sensory input do the work. No pressure to feel 'better' - just observe changes."
        },
        {
          "pattern": "Social Interaction Management",
          "description": "Minimal cognitive overhead for necessary human interactions",
          "signals": ["Coffee shop requires brief social exchange", "Energy too low for complex communication", "Need simple, predictable interaction"],
          "protocol": "EXECUTE: Use established order routine. Minimal pleasantries. Focus on transaction completion. Save social energy for post-caffeine state."
        }
      ]
    },
    {
      "id": "consolidation_phase",
      "title": "Gains Consolidation",
      "icon": "circle",
      "color": "purple",
      "entries": [
        {
          "pattern": "Caffeine Integration Window",
          "description": "20-30 minute period where chemical assistance begins supporting natural systems",
          "signals": ["Slight energy increase becoming noticeable", "Mental fog beginning to lift", "Physical movement feeling less effortful"],
          "protocol": "EXECUTE: Don't rush back indoors immediately. Use this transition period outdoors. Let caffeine + fresh air compound effects."
        },
        {
          "pattern": "Success Pattern Recognition",
          "description": "Acknowledging successful deployment of external motivator strategy",
          "signals": ["Made it outside despite initial resistance", "Completed basic transaction successfully", "Feeling marginally more functional"],
          "protocol": "EXECUTE: Note that the strategy worked. File this as evidence that external motivators can bridge low-energy periods effectively."
        },
        {
          "pattern": "Return Transition Planning",
          "description": "Preparing for re-entry to home environment with slightly improved cognitive state",
          "signals": ["Ready to return but not rushing", "Slight improvement in decision-making capacity", "Basic functions coming back online"],
          "protocol": "EXECUTE: Return home with one simple next action planned. Don't overwhelm newly-recovered bandwidth with complex planning."
        }
      ]
    },
    {
      "id": "post_mission_analysis",
      "title": "Post-Mission Integration",
      "icon": "square",
      "color": "yellow",
      "entries": [
        {
          "pattern": "System Status Evaluation",
          "description": "Assessing functional improvements post-external-motivator deployment",
          "signals": ["Cognitive fog partially lifted", "Physical energy slightly improved", "Automation systems less likely to misfire"],
          "protocol": "EXECUTE: Gentle reactivation of normal productivity tools. Test one complex automation to verify system stability before full re-engagement."
        },
        {
          "pattern": "Momentum Preservation",
          "description": "Using successful external engagement to support continued forward movement",
          "signals": ["Feeling capable of additional micro-tasks", "Internal resistance to activity decreased", "Natural curiosity beginning to return"],
          "protocol": "EXECUTE: Chain one additional small action while momentum exists. Don't overwhelm - preserve gains. Build on success incrementally."
        },
        {
          "pattern": "Strategy Documentation",
          "description": "Recording successful external motivator deployment for future low-energy periods",
          "signals": ["Mission accomplished with minimal cognitive overhead", "External structure successfully bridged internal paralysis", "Fresh air + caffeine combination effective"],
          "protocol": "EXECUTE: Log this as proven strategy for hit-by-truck mornings. File under 'external motivator tactics' for future reference."
        }
      ]
    }
  ]
};

const iconComponents = {
  circle: Circle,
  square: Square,
  triangle: Triangle,
  zap: Zap,
  battery: Battery
};

const colorClasses = {
  cyan: 'border-cyan-400 bg-cyan-400/10',
  purple: 'border-purple-400 bg-purple-400/10',
  green: 'border-green-400 bg-green-400/10',
  yellow: 'border-yellow-400 bg-yellow-400/10'
};

export default function CoffeeRunPlaybook() {
  const [expandedSections, setExpandedSections] = useState({});
  const [expandedEntries, setExpandedEntries] = useState({});

  const toggleSection = (sectionId) => {
    setExpandedSections(prev => ({
      ...prev,
      [sectionId]: !prev[sectionId]
    }));
  };

  const toggleEntry = (entryId) => {
    setExpandedEntries(prev => ({
      ...prev,
      [entryId]: !prev[entryId]
    }));
  };

  return (
    <div className="min-h-screen bg-black text-white font-mono p-4 sm:p-6 md:p-8">
      {/* ASCII Header */}
      <div className="text-green-400 text-xs leading-tight mb-6">
        <pre>{`
▓▓▒▒▓▓▒▒▓▓▒▒▓▓▒▒▓▓▒▒▓▓▒▒▓▓▒▒▓▓▒▒
▒▒     TACTICAL PLAYBOOK v2.0     ▒▒
▓▓▒▒▓▓▒▒▓▓▒▒▓▓▒▒▓▓▒▒▓▓▒▒▓▓▒▒▓▓▒▒`}</pre>
      </div>

      {/* Meta Information */}
      <div className="mb-8">
        <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">
          {playbookData.meta.title}
        </h1>
        <p className="text-gray-400 mb-2">{playbookData.meta.subtitle}</p>
        <div className="text-xs text-gray-500 space-y-1">
          <div>Version: {playbookData.meta.version}</div>
          <div>Context: {playbookData.meta.context}</div>
        </div>
      </div>

      {/* Mission Briefing */}
      <div className="mb-8 p-4 border border-green-400 bg-green-400/5 rounded">
        <h2 className="text-green-400 font-semibold mb-2">MISSION BRIEFING</h2>
        <p className="text-sm text-gray-300">
          Deploy structured external motivator (coffee acquisition) to bridge from internal paralysis 
          to functional cognitive state. Success metrics: completed transaction, sensory system activation, 
          momentum preservation for post-mission activities.
        </p>
      </div>

      {/* Sections */}
      {playbookData.sections.map((section) => {
        const IconComponent = iconComponents[section.icon] || Circle;
        const isExpanded = expandedSections[section.id];
        
        return (
          <div key={section.id} className="mb-6">
            {/* Section Header */}
            <button
              onClick={() => toggleSection(section.id)}
              className={`w-full text-left p-4 rounded-lg border-2 transition-all ${colorClasses[section.color]} hover:opacity-80`}
            >
              <div className="flex items-center justify-between">
                <div className="flex items-center space-x-3">
                  <IconComponent className="w-5 h-5" />
                  <span className="text-lg font-semibold">{section.title}</span>
                </div>
                {isExpanded ? 
                  <ChevronDown className="w-5 h-5" /> : 
                  <ChevronRight className="w-5 h-5" />
                }
              </div>
            </button>

            {/* Section Content */}
            {isExpanded && (
              <div className="mt-4 space-y-3">
                {section.entries.map((entry, entryIndex) => {
                  const entryId = `${section.id}_${entryIndex}`;
                  const isEntryExpanded = expandedEntries[entryId];
                  
                  return (
                    <div key={entryIndex} className="ml-4 border-l-2 border-gray-700 pl-4">
                      <button
                        onClick={() => toggleEntry(entryId)}
                        className="w-full text-left p-3 rounded border border-gray-600 hover:border-gray-500 bg-gray-900/50"
                      >
                        <div className="flex items-center justify-between">
                          <span className="font-semibold text-sm">{entry.pattern}</span>
                          {isEntryExpanded ? 
                            <ChevronDown className="w-4 h-4" /> : 
                            <ChevronRight className="w-4 h-4" />
                          }
                        </div>
                        <p className="text-xs text-gray-400 mt-1">{entry.description}</p>
                      </button>

                      {isEntryExpanded && (
                        <div className="mt-3 p-3 bg-gray-800/30 rounded text-xs space-y-3">
                          <div>
                            <span className="text-yellow-400 font-semibold">SITUATION INDICATORS:</span>
                            <ul className="mt-1 ml-4 list-disc text-gray-300">
                              {entry.signals.map((signal, idx) => (
                                <li key={idx}>{signal}</li>
                              ))}
                            </ul>
                          </div>
                          
                          <div>
                            <span className="text-green-400 font-semibold">TACTICAL RESPONSE:</span>
                            <p className="mt-1 text-gray-300">{entry.protocol}</p>
                          </div>
                        </div>
                      )}
                    </div>
                  );
                })}
              </div>
            )}
          </div>
        );
      })}

      {/* Footer */}
      <div className="mt-12 pt-6 border-t border-gray-800 text-xs text-gray-500">
        <p>MISSION STATUS: DOCUMENTED • TACTICS: VALIDATED • DEPLOYMENT: READY</p>
      </div>
    </div>
  );
}